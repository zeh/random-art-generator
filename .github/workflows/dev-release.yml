name: Beta release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Beta (dev) release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
        rust: [stable]
        include:
          - os: macOS-latest
            archive: tar.gz
            os_name: macOS
            target: x86_64-apple-darwin
            content_type: application/gzip
          - os: windows-latest
            archive: zip
            os_name: windows
            target: x86_64-pc-windows-msvc
            content_type: application/zip
          - os: ubuntu-latest
            archive: tar.gz
            os_name: linux
            target: x86_64-unknown-linux-gnu
            content_type: application/gzip

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release

      - name: Build executable
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: ${{ matrix.rust }}
          args: --release --target ${{ matrix.target }}

      - name: Get current time
        uses: 1466587594/get-current-time@v1
        id: current-time
        with:
          format: YYYY-MM-DD
          utcOffset: "-05:00"

      - name: Set output filename
        id: output-name
        run: echo "::set-output name=filename::rag-${{ matrix.os_name }}-beta-${{ steps.current-time.outputs.formattedTime }}-${{ github.sha }}-${{ matrix.target }}.${{ matrix.archive }}"

      - name: Build ZIP
        id: build_zip
        if: matrix.archive == 'zip'
        run: |
          cp target/${{ matrix.target }}/release/random-art-generator.exe rag.exe
          7z a ${{ steps.output-name.outputs.filename }} rag.exe
      - name: Build TAR
        id: build_tar
        if: matrix.archive == 'tar.gz'
        run: |
          cp target/${{ matrix.target }}/release/random-art-generator rag
          tar czvf ${{ steps.output-name.outputs.filename }} rag
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.output-name.outputs.filename }}
          path: ${{ steps.output-name.outputs.filename }}
